# Generated by Django 5.0 on 2025-09-07 13:56

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Bank',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('guid', models.UUIDField(default=uuid.uuid4, null=True, unique=True, verbose_name='GUID')),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('extra_document', models.FileField(blank=True, max_length=127, null=True, upload_to='extra_documents', verbose_name='دستورات و مستندات')),
                ('name', models.CharField(max_length=100, verbose_name='نام بانک')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='banks/logos/', verbose_name='لوگوی بانک')),
                ('color', models.CharField(help_text='کد رنگ هگز، مانند \u200e#1E88E5', max_length=7, verbose_name='رنگ برند')),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_creations', to=settings.AUTH_USER_MODEL, verbose_name='ایجاد کننده')),
            ],
            options={
                'verbose_name': 'بانک',
                'verbose_name_plural': 'بانک\u200cها',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='BankCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('guid', models.UUIDField(default=uuid.uuid4, null=True, unique=True, verbose_name='GUID')),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('extra_document', models.FileField(blank=True, max_length=127, null=True, upload_to='extra_documents', verbose_name='دستورات و مستندات')),
                ('card_number', models.CharField(db_index=True, max_length=16, verbose_name='شماره کارت')),
                ('card_holder_name', models.CharField(blank=True, max_length=70, verbose_name='نام دارنده کارت')),
                ('is_default', models.BooleanField(default=False, verbose_name='کارت پیش\u200cفرض')),
                ('status', models.CharField(choices=[('verified', 'تایید شده'), ('rejected', 'رد شده'), ('pending', 'در حال بررسی')], default='pending', max_length=20, verbose_name='وضعیت')),
                ('is_active', models.BooleanField(default=True, verbose_name='فعال')),
                ('sheba', models.CharField(blank=True, max_length=26, null=True, verbose_name='شماره شِبا')),
                ('last_used', models.DateTimeField(blank=True, null=True, verbose_name='آخرین استفاده')),
                ('rejection_reason', models.TextField(blank=True, null=True, verbose_name='دلیل رد')),
                ('bank', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cards', to='banking.bank', verbose_name='بانک')),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_creations', to=settings.AUTH_USER_MODEL, verbose_name='ایجاد کننده')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bank_cards', to=settings.AUTH_USER_MODEL, verbose_name='کاربر')),
            ],
            options={
                'verbose_name': 'کارت بانکی',
                'verbose_name_plural': 'کارت\u200cهای بانکی',
                'ordering': ['-is_default', '-created_at'],
                'indexes': [models.Index(fields=['user', 'is_active'], name='bankcard_user_active_idx'), models.Index(fields=['-is_default', '-created_at'], name='bankcard_default_added_idx')],
            },
        ),
        migrations.AddConstraint(
            model_name='bankcard',
            constraint=models.UniqueConstraint(condition=models.Q(('is_default', True)), fields=('user', 'is_default'), name='unique_default_card_per_user', violation_error_message='فقط یک کارت می\u200cتواند پیش\u200cفرض باشد.'),
        ),
        migrations.AddConstraint(
            model_name='bankcard',
            constraint=models.UniqueConstraint(fields=('user', 'card_number'), name='unique_card_per_user', violation_error_message='شما قبلاً این کارت را ثبت کرده\u200cاید.'),
        ),
        migrations.AddConstraint(
            model_name='bankcard',
            constraint=models.UniqueConstraint(condition=models.Q(('status', 'verified')), fields=('card_number',), name='unique_verified_card_number', violation_error_message='این شماره کارت قبلاً به\u200cصورت تأیید\u200cشده ثبت شده است.'),
        ),
    ]
