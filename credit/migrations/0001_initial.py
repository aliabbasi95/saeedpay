# Generated by Django 5.0 on 2025-09-07 14:06

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wallets', '0008_alter_installment_guid_alter_installmentplan_guid_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Statement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('guid', models.UUIDField(default=uuid.uuid4, null=True, unique=True, verbose_name='GUID')),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('extra_document', models.FileField(blank=True, max_length=127, null=True, upload_to='extra_documents', verbose_name='دستورات و مستندات')),
                ('year', models.SmallIntegerField(choices=[(1404, '1404')], verbose_name='سال')),
                ('month', models.SmallIntegerField(choices=[(1, 'فروردین'), (2, 'اردیبهشت'), (3, 'خرداد'), (4, 'تیر'), (5, 'مرداد'), (6, 'شهریور'), (7, 'مهر'), (8, 'آبان'), (9, 'آذر'), (10, 'دی'), (11, 'بهمن'), (12, 'اسفند')], verbose_name='ماه')),
                ('reference_code', models.CharField(blank=True, max_length=20, null=True, unique=True, verbose_name='کد پیگیری')),
                ('status', models.CharField(choices=[('current', 'جاری'), ('pending_payment', 'در انتظار پرداخت'), ('closed_no_penalty', 'بسته شده - بدون جریمه'), ('closed_with_penalty', 'بسته شده - با جریمه')], default='current', max_length=20, verbose_name='وضعیت')),
                ('opening_balance', models.BigIntegerField(default=0, verbose_name='مانده اول دوره')),
                ('closing_balance', models.BigIntegerField(default=0, verbose_name='مانده پایان دوره')),
                ('total_debit', models.BigIntegerField(default=0, verbose_name='مجموع بدهکار')),
                ('total_credit', models.BigIntegerField(default=0, verbose_name='مجموع بستانکار')),
                ('due_date', models.DateTimeField(blank=True, null=True, verbose_name='تاریخ سررسید')),
                ('paid_at', models.DateTimeField(blank=True, null=True, verbose_name='زمان پرداخت')),
                ('closed_at', models.DateTimeField(blank=True, null=True, verbose_name='زمان بستن')),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_creations', to=settings.AUTH_USER_MODEL, verbose_name='ایجاد کننده')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='statements', to=settings.AUTH_USER_MODEL, verbose_name='کاربر')),
            ],
            options={
                'verbose_name': 'صورتحساب اعتباری',
                'verbose_name_plural': 'صورتحساب\u200cهای اعتباری',
                'ordering': ['-year', '-month'],
            },
        ),
        migrations.CreateModel(
            name='StatementLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('guid', models.UUIDField(default=uuid.uuid4, null=True, unique=True, verbose_name='GUID')),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('extra_document', models.FileField(blank=True, max_length=127, null=True, upload_to='extra_documents', verbose_name='دستورات و مستندات')),
                ('type', models.CharField(choices=[('purchase', 'خرید'), ('payment', 'پرداخت'), ('fee', 'کارمزد'), ('penalty', 'جریمه'), ('interest', 'سود')], max_length=20, verbose_name='نوع سطر')),
                ('amount', models.BigIntegerField(verbose_name='مبلغ')),
                ('description', models.CharField(blank=True, max_length=255, verbose_name='توضیحات')),
                ('is_voided', models.BooleanField(db_index=True, default=False, verbose_name='باطل\u200cشده')),
                ('voided_at', models.DateTimeField(blank=True, null=True, verbose_name='زمان ابطال')),
                ('void_reason', models.CharField(blank=True, max_length=255, verbose_name='دلیل ابطال')),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_creations', to=settings.AUTH_USER_MODEL, verbose_name='ایجاد کننده')),
                ('reverses', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='reversed_by', to='credit.statementline', verbose_name='معکوسِ سطر')),
                ('statement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lines', to='credit.statement', verbose_name='صورتحساب')),
                ('transaction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wallets.transaction', verbose_name='تراکنش مرتبط')),
                ('voided_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='voided_statement_lines', to=settings.AUTH_USER_MODEL, verbose_name='ابطال\u200cکننده')),
            ],
            options={
                'verbose_name': 'سطر صورتحساب',
                'verbose_name_plural': 'سطرهای صورتحساب',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='CreditLimit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('guid', models.UUIDField(default=uuid.uuid4, null=True, unique=True, verbose_name='GUID')),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('extra_document', models.FileField(blank=True, max_length=127, null=True, upload_to='extra_documents', verbose_name='دستورات و مستندات')),
                ('approved_limit', models.BigIntegerField(verbose_name='حد اعتباری تایید شده')),
                ('is_active', models.BooleanField(default=False, verbose_name='فعال')),
                ('grace_period_days', models.PositiveIntegerField(blank=True, null=True, verbose_name='مهلت پرداخت (روز)')),
                ('expiry_date', models.DateField(verbose_name='تاریخ انقضا')),
                ('reference_code', models.CharField(blank=True, max_length=20, null=True, unique=True, verbose_name='کد پیگیری')),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_creations', to=settings.AUTH_USER_MODEL, verbose_name='ایجاد کننده')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='credit_limits', to=settings.AUTH_USER_MODEL, verbose_name='کاربر')),
            ],
            options={
                'verbose_name': 'حد اعتباری',
                'verbose_name_plural': 'حدود اعتباری',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['user', 'is_active'], name='cl_user_active_idx'), models.Index(fields=['expiry_date'], name='cl_expiry_idx')],
            },
        ),
        migrations.AddConstraint(
            model_name='creditlimit',
            constraint=models.UniqueConstraint(condition=models.Q(('is_active', True)), fields=('user',), name='unique_active_credit_limit_per_user'),
        ),
        migrations.AddIndex(
            model_name='statement',
            index=models.Index(fields=['user', 'status'], name='st_user_status_idx'),
        ),
        migrations.AddIndex(
            model_name='statement',
            index=models.Index(fields=['due_date'], name='st_due_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='statement',
            unique_together={('user', 'year', 'month')},
        ),
        migrations.AddIndex(
            model_name='statementline',
            index=models.Index(fields=['statement', 'created_at'], name='stl_stmt_created_idx'),
        ),
        migrations.AddIndex(
            model_name='statementline',
            index=models.Index(fields=['type'], name='stl_type_idx'),
        ),
        migrations.AddIndex(
            model_name='statementline',
            index=models.Index(fields=['is_voided'], name='stl_void_idx'),
        ),
        migrations.AddConstraint(
            model_name='statementline',
            constraint=models.UniqueConstraint(condition=models.Q(('is_voided', False), ('type', 'interest')), fields=('statement', 'type'), name='uniq_interest_per_statement'),
        ),
        migrations.AddConstraint(
            model_name='statementline',
            constraint=models.CheckConstraint(check=models.Q(models.Q(('amount__gt', 0), ('type', 'payment')), models.Q(('amount__lt', 0), ('type__in', ['purchase', 'fee', 'penalty', 'interest'])), _connector='OR'), name='amount_sign_by_type'),
        ),
    ]
