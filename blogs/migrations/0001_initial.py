# Generated by Django 5.0 on 2025-09-07 14:06

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('store', '0004_store_latitude_store_logo_store_longitude_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('guid', models.UUIDField(default=uuid.uuid4, null=True, unique=True, verbose_name='GUID')),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('extra_document', models.FileField(blank=True, max_length=127, null=True, upload_to='extra_documents', verbose_name='دستورات و مستندات')),
                ('title', models.CharField(max_length=200, verbose_name='عنوان')),
                ('slug', models.SlugField(blank=True, help_text='Left blank to auto-generate from title.', max_length=200, unique=True, verbose_name='نامک')),
                ('excerpt', models.TextField(blank=True, max_length=500, null=True, verbose_name='خلاصه')),
                ('featured_image', models.ImageField(blank=True, null=True, upload_to='articles/featured/', verbose_name='تصویر شاخص')),
                ('status', models.CharField(choices=[('draft', 'پیش\u200cنویس'), ('published', 'منتشر شده'), ('archived', 'آرشیو شده')], default='draft', max_length=20, verbose_name='وضعیت')),
                ('is_featured', models.BooleanField(default=False, verbose_name='مقاله ویژه')),
                ('published_at', models.DateTimeField(blank=True, null=True, verbose_name='زمان انتشار')),
                ('view_count', models.PositiveIntegerField(default=0, verbose_name='تعداد بازدید')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='articles', to=settings.AUTH_USER_MODEL, verbose_name='نویسنده')),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_creations', to=settings.AUTH_USER_MODEL, verbose_name='ایجاد کننده')),
            ],
            options={
                'verbose_name': 'مقاله',
                'verbose_name_plural': 'مقالات',
                'ordering': ['-is_featured', '-published_at', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('guid', models.UUIDField(default=uuid.uuid4, null=True, unique=True, verbose_name='GUID')),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('extra_document', models.FileField(blank=True, max_length=127, null=True, upload_to='extra_documents', verbose_name='دستورات و مستندات')),
                ('content', models.TextField(verbose_name='محتوای نظر')),
                ('is_approved', models.BooleanField(default=False, help_text='نظرات تایید نشده نمایش داده نمی\u200cشوند', verbose_name='تایید شده')),
                ('rating', models.PositiveIntegerField(default=5, help_text='امتیاز کاربر از 1 تا 5', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='امتیاز')),
                ('is_spam', models.BooleanField(default=False, verbose_name='اسپم')),
                ('spam_score', models.FloatField(default=0.0, help_text='امتیاز تشخیص اسپم (0.0 تا 1.0)', verbose_name='امتیاز اسپم')),
                ('like_count', models.PositiveIntegerField(default=0, verbose_name='تعداد لایک')),
                ('dislike_count', models.PositiveIntegerField(default=0, verbose_name='تعداد دیسلایک')),
                ('article', models.ForeignKey(blank=True, help_text='مقاله مرتبط با نظر - می\u200cتواند خالی باشد', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='blogs.article', verbose_name='مقاله')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='blog_comments', to=settings.AUTH_USER_MODEL, verbose_name='نویسنده نظر')),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_creations', to=settings.AUTH_USER_MODEL, verbose_name='ایجاد کننده')),
                ('reply_to', models.ForeignKey(blank=True, help_text='برای پاسخ به نظر دیگر', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='blogs.comment', verbose_name='پاسخ به')),
                ('store', models.ForeignKey(blank=True, help_text='فروشگاه مرتبط با نظر - می\u200cتواند خالی باشد', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='store.store', verbose_name='فروشگاه')),
            ],
            options={
                'verbose_name': 'نظر',
                'verbose_name_plural': 'نظرات',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('guid', models.UUIDField(default=uuid.uuid4, null=True, unique=True, verbose_name='GUID')),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('extra_document', models.FileField(blank=True, max_length=127, null=True, upload_to='extra_documents', verbose_name='دستورات و مستندات')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='نام برچسب')),
                ('slug', models.SlugField(blank=True, help_text='Left blank to auto-generate from name.', max_length=100, unique=True, verbose_name='نامک')),
                ('description', models.TextField(blank=True, null=True, verbose_name='توضیحات')),
                ('color', models.CharField(default='#007bff', help_text='کد رنگ هگز (مثال: #007bff)', max_length=7, verbose_name='رنگ برچسب')),
                ('is_active', models.BooleanField(default=True, verbose_name='فعال')),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_creations', to=settings.AUTH_USER_MODEL, verbose_name='ایجاد کننده')),
            ],
            options={
                'verbose_name': 'برچسب',
                'verbose_name_plural': 'برچسب\u200cها',
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='article',
            name='tags',
            field=models.ManyToManyField(blank=True, related_name='articles', to='blogs.tag', verbose_name='برچسب\u200cها'),
        ),
        migrations.CreateModel(
            name='ArticleSection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('guid', models.UUIDField(default=uuid.uuid4, null=True, unique=True, verbose_name='GUID')),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('extra_document', models.FileField(blank=True, max_length=127, null=True, upload_to='extra_documents', verbose_name='دستورات و مستندات')),
                ('section_type', models.CharField(choices=[('h1', 'عنوان اصلی (H1)'), ('h2', 'عنوان فرعی (H2)'), ('h3', 'عنوان سطح سوم (H3)'), ('h4', 'عنوان سطح چهارم (H4)'), ('paragraph', 'پاراگراف'), ('image', 'تصویر'), ('cite', 'نقل قول')], max_length=20, verbose_name='نوع بخش')),
                ('content', models.TextField(blank=True, help_text='Text content for headings, paragraphs, and quotes.', null=True, verbose_name='محتوا')),
                ('image', models.ImageField(blank=True, help_text='Image file for image sections.', null=True, upload_to='articles/sections/', verbose_name='تصویر')),
                ('image_alt', models.CharField(blank=True, max_length=200, null=True, verbose_name='متن جایگزین تصویر')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='ترتیب نمایش')),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sections', to='blogs.article', verbose_name='مقاله')),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_creations', to=settings.AUTH_USER_MODEL, verbose_name='ایجاد کننده')),
            ],
            options={
                'verbose_name': 'بخش مقاله',
                'verbose_name_plural': 'بخش\u200cهای مقاله',
                'ordering': ['article', 'order'],
                'indexes': [models.Index(fields=['article', 'order'], name='article_section_order_idx')],
            },
        ),
        migrations.AddConstraint(
            model_name='articlesection',
            constraint=models.UniqueConstraint(fields=('article', 'order'), name='uniq_article_order'),
        ),
        migrations.AddIndex(
            model_name='comment',
            index=models.Index(fields=['article'], name='comment_article_idx'),
        ),
        migrations.AddIndex(
            model_name='comment',
            index=models.Index(fields=['store'], name='comment_store_idx'),
        ),
        migrations.AddConstraint(
            model_name='comment',
            constraint=models.CheckConstraint(check=models.Q(('article__isnull', False), ('store__isnull', False), _negated=True), name='comment_not_both_article_and_store'),
        ),
        migrations.AddIndex(
            model_name='article',
            index=models.Index(fields=['status', 'published_at'], name='article_status_pub_idx'),
        ),
        migrations.AddIndex(
            model_name='article',
            index=models.Index(fields=['is_featured', 'published_at'], name='article_feat_pub_idx'),
        ),
    ]
